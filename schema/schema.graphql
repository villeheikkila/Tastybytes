scalar BigInt

"""
Boolean expression comparing fields on type "BigInt"
"""
input BigIntFilter {
  eq: BigInt
  gt: BigInt
  gte: BigInt
  lt: BigInt
  lte: BigInt
  neq: BigInt
}

"""
Boolean expression comparing fields on type "Boolean"
"""
input BooleanFilter {
  eq: Boolean
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  neq: Boolean
}

scalar Cursor

scalar Date

"""
Boolean expression comparing fields on type "Date"
"""
input DateFilter {
  eq: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  neq: Date
}

scalar Datetime

"""
Boolean expression comparing fields on type "Datetime"
"""
input DatetimeFilter {
  eq: Datetime
  gt: Datetime
  gte: Datetime
  lt: Datetime
  lte: Datetime
  neq: Datetime
}

"""
Boolean expression comparing fields on type "Float"
"""
input FloatFilter {
  eq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  neq: Float
}

"""
Boolean expression comparing fields on type "Int"
"""
input IntFilter {
  eq: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  neq: Int
}

scalar JSON

"""
Boolean expression comparing fields on type "JSON"
"""
input JSONFilter {
  eq: JSON
  neq: JSON
}

"""The root type for creating and mutating data"""
type Mutation {
  """Deletes zero or more records from the collection"""
  deleteFrombrandsCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: brandsFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): brandsDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFromcategoriesCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: categoriesFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): categoriesDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFromcheck_insCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: check_insFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): check_insDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFromcompaniesCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: companiesFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): companiesDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFromproductsCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: productsFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): productsDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFromprofilesCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: profilesFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): profilesDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFromsub_brandsCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: sub_brandsFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): sub_brandsDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFromsubcategoriesCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: subcategoriesFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): subcategoriesDeleteResponse!

  """Adds one or more `brandsInsertResponse` records to the collection"""
  insertIntobrandsCollection(objects: [brandsInsertInput!]!): brandsInsertResponse

  """Adds one or more `categoriesInsertResponse` records to the collection"""
  insertIntocategoriesCollection(objects: [categoriesInsertInput!]!): categoriesInsertResponse

  """Adds one or more `check_insInsertResponse` records to the collection"""
  insertIntocheck_insCollection(objects: [check_insInsertInput!]!): check_insInsertResponse

  """Adds one or more `companiesInsertResponse` records to the collection"""
  insertIntocompaniesCollection(objects: [companiesInsertInput!]!): companiesInsertResponse

  """Adds one or more `productsInsertResponse` records to the collection"""
  insertIntoproductsCollection(objects: [productsInsertInput!]!): productsInsertResponse

  """Adds one or more `profilesInsertResponse` records to the collection"""
  insertIntoprofilesCollection(objects: [profilesInsertInput!]!): profilesInsertResponse

  """Adds one or more `sub_brandsInsertResponse` records to the collection"""
  insertIntosub_brandsCollection(objects: [sub_brandsInsertInput!]!): sub_brandsInsertResponse

  """
  Adds one or more `subcategoriesInsertResponse` records to the collection
  """
  insertIntosubcategoriesCollection(objects: [subcategoriesInsertInput!]!): subcategoriesInsertResponse

  """Updates zero or more records in the collection"""
  updatebrandsCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: brandsUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: brandsFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): brandsUpdateResponse!

  """Updates zero or more records in the collection"""
  updatecategoriesCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: categoriesUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: categoriesFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): categoriesUpdateResponse!

  """Updates zero or more records in the collection"""
  updatecheck_insCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: check_insUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: check_insFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): check_insUpdateResponse!

  """Updates zero or more records in the collection"""
  updatecompaniesCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: companiesUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: companiesFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): companiesUpdateResponse!

  """Updates zero or more records in the collection"""
  updateproductsCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: productsUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: productsFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): productsUpdateResponse!

  """Updates zero or more records in the collection"""
  updateprofilesCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: profilesUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: profilesFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): profilesUpdateResponse!

  """Updates zero or more records in the collection"""
  updatesub_brandsCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: sub_brandsUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: sub_brandsFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): sub_brandsUpdateResponse!

  """Updates zero or more records in the collection"""
  updatesubcategoriesCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: subcategoriesUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: subcategoriesFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): subcategoriesUpdateResponse!
}

"""Defines a per-field sorting order"""
enum OrderByDirection {
  AscNullsFirst
  AscNullsLast
  DescNullsFirst
  DescNullsLast
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

"""The root type for querying data"""
type Query {
  """A pagable collection of type `brands`"""
  brandsCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: brandsFilter

    """Sort order to apply to the collection"""
    orderBy: [brandsOrderBy!]
  ): brandsConnection

  """A pagable collection of type `categories`"""
  categoriesCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: categoriesFilter

    """Sort order to apply to the collection"""
    orderBy: [categoriesOrderBy!]
  ): categoriesConnection

  """A pagable collection of type `check_ins`"""
  check_insCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: check_insFilter

    """Sort order to apply to the collection"""
    orderBy: [check_insOrderBy!]
  ): check_insConnection

  """A pagable collection of type `companies`"""
  companiesCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: companiesFilter

    """Sort order to apply to the collection"""
    orderBy: [companiesOrderBy!]
  ): companiesConnection

  """A pagable collection of type `products`"""
  productsCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: productsFilter

    """Sort order to apply to the collection"""
    orderBy: [productsOrderBy!]
  ): productsConnection

  """A pagable collection of type `profiles`"""
  profilesCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: profilesFilter

    """Sort order to apply to the collection"""
    orderBy: [profilesOrderBy!]
  ): profilesConnection

  """A pagable collection of type `sub_brands`"""
  sub_brandsCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: sub_brandsFilter

    """Sort order to apply to the collection"""
    orderBy: [sub_brandsOrderBy!]
  ): sub_brandsConnection

  """A pagable collection of type `subcategories`"""
  subcategoriesCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: subcategoriesFilter

    """Sort order to apply to the collection"""
    orderBy: [subcategoriesOrderBy!]
  ): subcategoriesConnection
}

"""
Boolean expression comparing fields on type "String"
"""
input StringFilter {
  eq: String
  gt: String
  gte: String
  lt: String
  lte: String
  neq: String
}

scalar Time

"""
Boolean expression comparing fields on type "Time"
"""
input TimeFilter {
  eq: Time
  gt: Time
  gte: Time
  lt: Time
  lte: Time
  neq: Time
}

scalar UUID

"""
Boolean expression comparing fields on type "UUID"
"""
input UUIDFilter {
  eq: UUID
  neq: UUID
}

type brands {
  id: BigInt!
  name: String!
  brand_owner_id: BigInt
  companies: companies
  sub_brandsCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: sub_brandsFilter

    """Sort order to apply to the collection"""
    orderBy: [sub_brandsOrderBy!]
  ): sub_brandsConnection
}

type brandsConnection {
  edges: [brandsEdge!]!
  pageInfo: PageInfo!
}

type brandsDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [brands!]!
}

type brandsEdge {
  cursor: String!
  node: brands
}

input brandsFilter {
  id: BigIntFilter
  name: StringFilter
  brand_owner_id: BigIntFilter
}

input brandsInsertInput {
  name: String
  brand_owner_id: BigInt
}

type brandsInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [brands!]!
}

input brandsOrderBy {
  id: OrderByDirection
  name: OrderByDirection
  brand_owner_id: OrderByDirection
}

input brandsUpdateInput {
  name: String
  brand_owner_id: BigInt
}

type brandsUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [brands!]!
}

type categories {
  id: BigInt!
  name: String!
  subcategoriesCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: subcategoriesFilter

    """Sort order to apply to the collection"""
    orderBy: [subcategoriesOrderBy!]
  ): subcategoriesConnection
}

type categoriesConnection {
  edges: [categoriesEdge!]!
  pageInfo: PageInfo!
}

type categoriesDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [categories!]!
}

type categoriesEdge {
  cursor: String!
  node: categories
}

input categoriesFilter {
  id: BigIntFilter
  name: StringFilter
}

input categoriesInsertInput {
  name: String
}

type categoriesInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [categories!]!
}

input categoriesOrderBy {
  id: OrderByDirection
  name: OrderByDirection
}

input categoriesUpdateInput {
  name: String
}

type categoriesUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [categories!]!
}

type check_ins {
  id: BigInt!
  rating: Int
  review: String
  author_id: UUID!
  product_id: BigInt!
  check_in_date: Datetime!
  products: products
  profiles: profiles
}

type check_insConnection {
  edges: [check_insEdge!]!
  pageInfo: PageInfo!
}

type check_insDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [check_ins!]!
}

type check_insEdge {
  cursor: String!
  node: check_ins
}

input check_insFilter {
  id: BigIntFilter
  rating: IntFilter
  review: StringFilter
  author_id: UUIDFilter
  product_id: BigIntFilter
  check_in_date: DatetimeFilter
}

input check_insInsertInput {
  rating: Int
  review: String
  author_id: UUID
  product_id: BigInt
  check_in_date: Datetime
}

type check_insInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [check_ins!]!
}

input check_insOrderBy {
  id: OrderByDirection
  rating: OrderByDirection
  review: OrderByDirection
  author_id: OrderByDirection
  product_id: OrderByDirection
  check_in_date: OrderByDirection
}

input check_insUpdateInput {
  rating: Int
  review: String
  author_id: UUID
  product_id: BigInt
  check_in_date: Datetime
}

type check_insUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [check_ins!]!
}

type companies {
  id: BigInt!
  name: String!
  brandsCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: brandsFilter

    """Sort order to apply to the collection"""
    orderBy: [brandsOrderBy!]
  ): brandsConnection
  productsCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: productsFilter

    """Sort order to apply to the collection"""
    orderBy: [productsOrderBy!]
  ): productsConnection
}

type companiesConnection {
  edges: [companiesEdge!]!
  pageInfo: PageInfo!
}

type companiesDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [companies!]!
}

type companiesEdge {
  cursor: String!
  node: companies
}

input companiesFilter {
  id: BigIntFilter
  name: StringFilter
}

input companiesInsertInput {
  name: String
}

type companiesInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [companies!]!
}

input companiesOrderBy {
  id: OrderByDirection
  name: OrderByDirection
}

input companiesUpdateInput {
  name: String
}

type companiesUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [companies!]!
}

type products {
  id: BigInt!
  name: String!
  description: String
  manufacturer_id: BigInt
  subcategory_id: BigInt!
  sub_brand_id: BigInt!
  check_insCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: check_insFilter

    """Sort order to apply to the collection"""
    orderBy: [check_insOrderBy!]
  ): check_insConnection
  companies: companies
  sub_brands: sub_brands
  subcategories: subcategories
}

type productsConnection {
  edges: [productsEdge!]!
  pageInfo: PageInfo!
}

type productsDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [products!]!
}

type productsEdge {
  cursor: String!
  node: products
}

input productsFilter {
  id: BigIntFilter
  name: StringFilter
  description: StringFilter
  manufacturer_id: BigIntFilter
  subcategory_id: BigIntFilter
  sub_brand_id: BigIntFilter
}

input productsInsertInput {
  name: String
  description: String
  manufacturer_id: BigInt
  subcategory_id: BigInt
  sub_brand_id: BigInt
}

type productsInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [products!]!
}

input productsOrderBy {
  id: OrderByDirection
  name: OrderByDirection
  description: OrderByDirection
  manufacturer_id: OrderByDirection
  subcategory_id: OrderByDirection
  sub_brand_id: OrderByDirection
}

input productsUpdateInput {
  name: String
  description: String
  manufacturer_id: BigInt
  subcategory_id: BigInt
  sub_brand_id: BigInt
}

type productsUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [products!]!
}

type profiles {
  id: UUID!
  updated_at: Datetime
  first_name: String
  last_name: String
  username: String!
  avatar_url: String
  website: String
  check_insCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: check_insFilter

    """Sort order to apply to the collection"""
    orderBy: [check_insOrderBy!]
  ): check_insConnection
}

type profilesConnection {
  edges: [profilesEdge!]!
  pageInfo: PageInfo!
}

type profilesDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [profiles!]!
}

type profilesEdge {
  cursor: String!
  node: profiles
}

input profilesFilter {
  id: UUIDFilter
  updated_at: DatetimeFilter
  first_name: StringFilter
  last_name: StringFilter
  username: StringFilter
  avatar_url: StringFilter
  website: StringFilter
}

input profilesInsertInput {
  id: UUID
  updated_at: Datetime
  first_name: String
  last_name: String
  username: String
  avatar_url: String
  website: String
}

type profilesInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [profiles!]!
}

input profilesOrderBy {
  id: OrderByDirection
  updated_at: OrderByDirection
  first_name: OrderByDirection
  last_name: OrderByDirection
  username: OrderByDirection
  avatar_url: OrderByDirection
  website: OrderByDirection
}

input profilesUpdateInput {
  id: UUID
  updated_at: Datetime
  first_name: String
  last_name: String
  username: String
  avatar_url: String
  website: String
}

type profilesUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [profiles!]!
}

type sub_brands {
  id: BigInt!
  name: String!
  brand_id: BigInt
  brands: brands
  productsCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: productsFilter

    """Sort order to apply to the collection"""
    orderBy: [productsOrderBy!]
  ): productsConnection
}

type sub_brandsConnection {
  edges: [sub_brandsEdge!]!
  pageInfo: PageInfo!
}

type sub_brandsDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [sub_brands!]!
}

type sub_brandsEdge {
  cursor: String!
  node: sub_brands
}

input sub_brandsFilter {
  id: BigIntFilter
  name: StringFilter
  brand_id: BigIntFilter
}

input sub_brandsInsertInput {
  name: String
  brand_id: BigInt
}

type sub_brandsInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [sub_brands!]!
}

input sub_brandsOrderBy {
  id: OrderByDirection
  name: OrderByDirection
  brand_id: OrderByDirection
}

input sub_brandsUpdateInput {
  name: String
  brand_id: BigInt
}

type sub_brandsUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [sub_brands!]!
}

type subcategories {
  id: BigInt!
  name: String!
  category_id: BigInt!
  categories: categories
  productsCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: productsFilter

    """Sort order to apply to the collection"""
    orderBy: [productsOrderBy!]
  ): productsConnection
}

type subcategoriesConnection {
  edges: [subcategoriesEdge!]!
  pageInfo: PageInfo!
}

type subcategoriesDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [subcategories!]!
}

type subcategoriesEdge {
  cursor: String!
  node: subcategories
}

input subcategoriesFilter {
  id: BigIntFilter
  name: StringFilter
  category_id: BigIntFilter
}

input subcategoriesInsertInput {
  name: String
  category_id: BigInt
}

type subcategoriesInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [subcategories!]!
}

input subcategoriesOrderBy {
  id: OrderByDirection
  name: OrderByDirection
  category_id: OrderByDirection
}

input subcategoriesUpdateInput {
  name: String
  category_id: BigInt
}

type subcategoriesUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [subcategories!]!
}