-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

DROP EXTENSION IF EXISTS pg_graphql;

CREATE OR REPLACE FUNCTION public.tg__set_check_in_image_on_upload()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
    SET search_path=public
AS $BODY$
begin
  if new.bucket_id = 'check-ins' then
    with parts as (select string_to_array(new.name, '/') arr),
         formatted_parts as (select array_to_string(arr[2:], '')                      image_url,
                                    substr(array_to_string(arr[2:], ''), 0,
                                           strpos(array_to_string(arr[2:], ''), '.'))::bigint check_in_id
                             from parts)
    update
      check_ins
    set image_url = fp.image_url
    from formatted_parts fp
    where created_by = new.owner
      and id = fp.check_in_id;
  end if;
  return new;
end;
$BODY$;

ALTER FUNCTION public.tg__set_check_in_image_on_upload()
    OWNER TO postgres_temporary_object_holder;

GRANT EXECUTE ON FUNCTION public.tg__set_check_in_image_on_upload() TO authenticated;

GRANT EXECUTE ON FUNCTION public.tg__set_check_in_image_on_upload() TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.tg__set_check_in_image_on_upload() TO postgres_temporary_object_holder;

GRANT EXECUTE ON FUNCTION public.tg__set_check_in_image_on_upload() TO postgres;

GRANT EXECUTE ON FUNCTION public.tg__set_check_in_image_on_upload() TO anon;

GRANT EXECUTE ON FUNCTION public.tg__set_check_in_image_on_upload() TO service_role;

CREATE OR REPLACE FUNCTION public.tg__set_avatar_on_upload()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    VOLATILE SECURITY DEFINER
    COST 100
AS $BODY$
begin
  if new.bucket_id = 'avatars' then
    delete from storage.objects where name = new.name;
    update public.profiles set avatar_url = new.name where id = auth.uid();
  end if;
  return new;
end;
$BODY$;

ALTER FUNCTION public.tg__set_avatar_on_upload()
    OWNER TO postgres_temporary_object_holder;

REVOKE ALL ON FUNCTION public.tg__set_avatar_on_upload() FROM postgres;

REVOKE ALL ON FUNCTION public.tg__set_avatar_on_upload() FROM supabase_admin;

REVOKE ALL ON FUNCTION public.tg__set_avatar_on_upload() FROM authenticated;

REVOKE ALL ON FUNCTION public.tg__set_avatar_on_upload() FROM PUBLIC;

REVOKE ALL ON FUNCTION public.tg__set_avatar_on_upload() FROM service_role;

GRANT EXECUTE ON FUNCTION public.tg__set_avatar_on_upload() TO authenticated;


GRANT EXECUTE ON FUNCTION public.tg__set_avatar_on_upload() TO PUBLIC;


GRANT EXECUTE ON FUNCTION public.tg__set_avatar_on_upload() TO postgres_temporary_object_holder;


GRANT EXECUTE ON FUNCTION public.tg__set_avatar_on_upload() TO postgres;


GRANT EXECUTE ON FUNCTION public.tg__set_avatar_on_upload() TO anon;


GRANT EXECUTE ON FUNCTION public.tg__set_avatar_on_upload() TO service_role;

REVOKE ALL ON TABLE public.check_in_comments FROM anon;
REVOKE ALL ON TABLE public.check_in_comments FROM authenticated;
REVOKE ALL ON TABLE public.check_in_comments FROM service_role;
GRANT ALL ON TABLE public.check_in_comments TO authenticated;

GRANT ALL ON TABLE public.check_in_comments TO anon;

GRANT ALL ON TABLE public.check_in_comments TO service_role;

REVOKE ALL ON TABLE public.product_edit_suggestion_subcategories FROM authenticated;
REVOKE ALL ON TABLE public.product_edit_suggestion_subcategories FROM postgres;
REVOKE ALL ON TABLE public.product_edit_suggestion_subcategories FROM service_role;
GRANT ALL ON TABLE public.product_edit_suggestion_subcategories TO authenticated;

GRANT ALL ON TABLE public.product_edit_suggestion_subcategories TO postgres;

GRANT ALL ON TABLE public.product_edit_suggestion_subcategories TO service_role;

REVOKE ALL ON TABLE public.check_in_flavors FROM anon;
REVOKE ALL ON TABLE public.check_in_flavors FROM postgres;
REVOKE ALL ON TABLE public.check_in_flavors FROM service_role;
GRANT ALL ON TABLE public.check_in_flavors TO postgres;

GRANT ALL ON TABLE public.check_in_flavors TO anon;

GRANT ALL ON TABLE public.check_in_flavors TO service_role;

REVOKE ALL ON TABLE public.permissions FROM authenticated;
REVOKE ALL ON TABLE public.permissions FROM postgres;
REVOKE ALL ON TABLE public.permissions FROM service_role;
GRANT ALL ON TABLE public.permissions TO authenticated;

GRANT ALL ON TABLE public.permissions TO postgres;

GRANT ALL ON TABLE public.permissions TO service_role;

REVOKE ALL ON TABLE public.profiles FROM anon;
REVOKE ALL ON TABLE public.profiles FROM postgres;
REVOKE ALL ON TABLE public.profiles FROM service_role;
GRANT ALL ON TABLE public.profiles TO postgres;

GRANT ALL ON TABLE public.profiles TO anon;

GRANT ALL ON TABLE public.profiles TO service_role;

REVOKE ALL ON TABLE public.categories FROM anon;
REVOKE ALL ON TABLE public.categories FROM postgres;
REVOKE ALL ON TABLE public.categories FROM service_role;
GRANT ALL ON TABLE public.categories TO postgres;

GRANT ALL ON TABLE public.categories TO anon;

GRANT ALL ON TABLE public.categories TO service_role;

REVOKE ALL ON TABLE public.locations FROM authenticated;
REVOKE ALL ON TABLE public.locations FROM postgres;
REVOKE ALL ON TABLE public.locations FROM service_role;
GRANT ALL ON TABLE public.locations TO authenticated;

GRANT ALL ON TABLE public.locations TO postgres;

GRANT ALL ON TABLE public.locations TO service_role;

REVOKE ALL ON TABLE public.brand_edit_suggestions FROM authenticated;
REVOKE ALL ON TABLE public.brand_edit_suggestions FROM postgres;
REVOKE ALL ON TABLE public.brand_edit_suggestions FROM service_role;
GRANT ALL ON TABLE public.brand_edit_suggestions TO authenticated;

GRANT ALL ON TABLE public.brand_edit_suggestions TO postgres;

GRANT ALL ON TABLE public.brand_edit_suggestions TO service_role;

REVOKE ALL ON TABLE public.roles_permissions FROM authenticated;
REVOKE ALL ON TABLE public.roles_permissions FROM postgres;
REVOKE ALL ON TABLE public.roles_permissions FROM service_role;
GRANT ALL ON TABLE public.roles_permissions TO authenticated;

GRANT ALL ON TABLE public.roles_permissions TO postgres;

GRANT ALL ON TABLE public.roles_permissions TO service_role;

REVOKE ALL ON TABLE public.countries FROM authenticated;
REVOKE ALL ON TABLE public.countries FROM postgres;
REVOKE ALL ON TABLE public.countries FROM service_role;
GRANT ALL ON TABLE public.countries TO authenticated;

GRANT ALL ON TABLE public.countries TO postgres;

GRANT ALL ON TABLE public.countries TO service_role;

REVOKE ALL ON TABLE public.category_serving_styles FROM authenticated;
REVOKE ALL ON TABLE public.category_serving_styles FROM postgres;
REVOKE ALL ON TABLE public.category_serving_styles FROM service_role;
GRANT ALL ON TABLE public.category_serving_styles TO authenticated;

GRANT ALL ON TABLE public.category_serving_styles TO postgres;

GRANT ALL ON TABLE public.category_serving_styles TO service_role;

REVOKE ALL ON TABLE public.flavors FROM anon;
REVOKE ALL ON TABLE public.flavors FROM postgres;
REVOKE ALL ON TABLE public.flavors FROM service_role;
GRANT ALL ON TABLE public.flavors TO postgres;

GRANT ALL ON TABLE public.flavors TO anon;

GRANT ALL ON TABLE public.flavors TO service_role;

REVOKE ALL ON TABLE public.company_edit_suggestions FROM authenticated;
REVOKE ALL ON TABLE public.company_edit_suggestions FROM postgres;
REVOKE ALL ON TABLE public.company_edit_suggestions FROM service_role;
GRANT ALL ON TABLE public.company_edit_suggestions TO authenticated;

GRANT ALL ON TABLE public.company_edit_suggestions TO postgres;

GRANT ALL ON TABLE public.company_edit_suggestions TO service_role;

REVOKE ALL ON TABLE public.profile_settings FROM authenticated;
REVOKE ALL ON TABLE public.profile_settings FROM postgres;
REVOKE ALL ON TABLE public.profile_settings FROM service_role;
GRANT ALL ON TABLE public.profile_settings TO authenticated;

GRANT ALL ON TABLE public.profile_settings TO postgres;

GRANT ALL ON TABLE public.profile_settings TO service_role;

REVOKE ALL ON TABLE public.check_in_tagged_profiles FROM anon;
REVOKE ALL ON TABLE public.check_in_tagged_profiles FROM authenticated;
REVOKE ALL ON TABLE public.check_in_tagged_profiles FROM service_role;
GRANT ALL ON TABLE public.check_in_tagged_profiles TO authenticated;

GRANT ALL ON TABLE public.check_in_tagged_profiles TO anon;

GRANT ALL ON TABLE public.check_in_tagged_profiles TO service_role;

REVOKE ALL ON TABLE public.roles FROM anon;
REVOKE ALL ON TABLE public.roles FROM postgres;
REVOKE ALL ON TABLE public.roles FROM service_role;
GRANT ALL ON TABLE public.roles TO postgres;

GRANT ALL ON TABLE public.roles TO anon;

GRANT ALL ON TABLE public.roles TO service_role;

REVOKE ALL ON TABLE public.profiles_roles FROM authenticated;
REVOKE ALL ON TABLE public.profiles_roles FROM postgres;
REVOKE ALL ON TABLE public.profiles_roles FROM service_role;
GRANT ALL ON TABLE public.profiles_roles TO authenticated;

GRANT ALL ON TABLE public.profiles_roles TO postgres;

GRANT ALL ON TABLE public.profiles_roles TO service_role;

REVOKE ALL ON TABLE public.serving_styles FROM anon;
REVOKE ALL ON TABLE public.serving_styles FROM authenticated;
REVOKE ALL ON TABLE public.serving_styles FROM service_role;
GRANT ALL ON TABLE public.serving_styles TO authenticated;

GRANT ALL ON TABLE public.serving_styles TO anon;

GRANT ALL ON TABLE public.serving_styles TO service_role;

-- Type: color_scheme

-- DROP TYPE IF EXISTS public.color_scheme;

CREATE TYPE public.color_scheme AS ENUM
    ('light', 'dark', 'system');

ALTER TYPE public.color_scheme
    OWNER TO postgres;
