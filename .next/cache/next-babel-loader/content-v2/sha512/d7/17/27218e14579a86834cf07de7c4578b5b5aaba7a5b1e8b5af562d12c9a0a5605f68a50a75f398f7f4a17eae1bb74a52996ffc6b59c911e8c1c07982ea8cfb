{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/villeheikkila/Developer/nextjs-auth/components/Auth.js\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Auth(props) {\n  const {\n    supabaseClient,\n    authView,\n    setAuthView\n  } = props;\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const handleSignIn = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    const {\n      error: signInError\n    } = await supabaseClient.auth.signIn({\n      email,\n      password\n    });\n    if (signInError) setError(signInError.message);\n    setLoading(false);\n  };\n\n  const handleSignUp = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    const {\n      error: signUpError\n    } = await supabaseClient.auth.signUp({\n      email,\n      password\n    });\n    if (signUpError) setError(signUpError.message);\n    setLoading(false);\n  };\n\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    setError('');\n    setMessage('');\n    setLoading(true);\n    const {\n      error\n    } = await supabaseClient.auth.api.resetPasswordForEmail(email);\n    if (error) setError(error.message);else setMessage('Check your email for the password reset link');\n    setLoading(false);\n  };\n\n  const handleMagicLinkSignIn = async e => {\n    e.preventDefault();\n    setError('');\n    setMessage('');\n    setLoading(true);\n    const {\n      error\n    } = await supabaseClient.auth.signIn({\n      email\n    });\n    if (error) setError(error.message);else setMessage('Check your email for the magic link');\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), authView === 'sign_in' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSignIn(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"sign-in__email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"sign-in__email\",\n          label: \"Email address\",\n          autoComplete: \"email\",\n          placeholder: \"Type in your email address\",\n          defaultValue: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"sign-in__password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"sign-in__password\",\n          label: \"Password\",\n          type: \"password\",\n          defaultValue: password,\n          autoComplete: \"current-password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('sign_up'),\n        children: \"Don't have an account? Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('forgotten_password'),\n        children: \"Forgot my password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('magic_link'),\n        children: \"Send magic link email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : authView === 'sign_up' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSignUp(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"sign-up__email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"sign-up__email\",\n          label: \"Email address\",\n          autoComplete: \"email\",\n          placeholder: \"Type in your email address\",\n          defaultValue: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"sign-up__password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"sign-up__password\",\n          label: \"Password\",\n          type: \"password\",\n          defaultValue: password,\n          autoComplete: \"current-password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"SignUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('sign_in'),\n        children: \"Already have an account, Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('forgotten_password'),\n        children: \"Forgot my password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('magic_link'),\n        children: \"Send magic link email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : authView === 'forgotten_password' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Forgotten password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePasswordReset,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"forgotten_password__email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"forgotten_password__email\",\n          label: \"Email address\",\n          autoComplete: \"email\",\n          placeholder: \"Type in your email address\",\n          defaultValue: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send reset password instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('sign_up'),\n        children: \"Don't have an account? Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('sign_in'),\n        children: \"Already have an account, Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('magic_link'),\n        children: \"Send magic link email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : authView === 'magic_link' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Magic link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleMagicLinkSignIn,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          label: \"Email address\",\n          autoComplete: \"email\",\n          placeholder: \"Type in your email address\",\n          defaultValue: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send magic link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('sign_up'),\n        children: \"Don't have an account? Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => setAuthView('sign_in'),\n        children: \"Already have an account, Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n}\n\nfunction UpdatePassword({\n  supabaseClient\n}) {\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    setError('');\n    setMessage('');\n    setLoading(true);\n    const {\n      error\n    } = await supabaseClient.auth.update({\n      password\n    });\n    if (error) setError(error.message);else setMessage('Your password has been updated');\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Set a new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordReset,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"New password\",\n        placeholder: \"Enter your new password\",\n        type: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        block: true,\n        size: \"large\",\n        htmlType: \"submit\",\n        children: \"Update password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nAuth.UpdatePassword = UpdatePassword;\nexport default Auth;","map":{"version":3,"sources":["/Users/villeheikkila/Developer/nextjs-auth/components/Auth.js"],"names":["React","useEffect","useState","Auth","props","supabaseClient","authView","setAuthView","email","setEmail","password","setPassword","message","setMessage","error","setError","loading","setLoading","handleSignIn","e","preventDefault","signInError","auth","signIn","handleSignUp","signUpError","signUp","handlePasswordReset","api","resetPasswordForEmail","handleMagicLinkSignIn","color","target","value","UpdatePassword","update"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction Auth(props) {\n  const { supabaseClient, authView, setAuthView } = props\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [message, setMessage] = useState('')\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const handleSignIn = async (e) => {\n    e.preventDefault()\n    setError('')\n    setLoading(true)\n\n    const { error: signInError } = await supabaseClient.auth.signIn({\n      email,\n      password,\n    })\n    if (signInError) setError(signInError.message)\n\n    setLoading(false)\n  }\n\n  const handleSignUp = async (e) => {\n    e.preventDefault()\n    setError('')\n    setLoading(true)\n\n    const { error: signUpError } = await supabaseClient.auth.signUp({\n      email,\n      password,\n    })\n    if (signUpError) setError(signUpError.message)\n\n    setLoading(false)\n  }\n\n  const handlePasswordReset = async (e) => {\n    e.preventDefault()\n    setError('')\n    setMessage('')\n    setLoading(true)\n    const { error } = await supabaseClient.auth.api.resetPasswordForEmail(email)\n    if (error) setError(error.message)\n    else setMessage('Check your email for the password reset link')\n    setLoading(false)\n  }\n\n  const handleMagicLinkSignIn = async (e) => {\n    e.preventDefault()\n    setError('')\n    setMessage('')\n    setLoading(true)\n    const { error } = await supabaseClient.auth.signIn({ email })\n    if (error) setError(error.message)\n    else setMessage('Check your email for the magic link')\n    setLoading(false)\n  }\n\n  return (\n    <>\n      {loading && <h3>Loading..</h3>}\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      {message && <div style={{ color: 'green' }}>{message}</div>}\n      {authView === 'sign_in' ? (\n        <>\n          <h4>Sign in</h4>\n          <form onSubmit={(e) => handleSignIn(e)}>\n            <label for=\"sign-in__email\">Email</label>\n            <input\n              id=\"sign-in__email\"\n              label=\"Email address\"\n              autoComplete=\"email\"\n              placeholder=\"Type in your email address\"\n              defaultValue={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <label for=\"sign-in__password\">Password</label>\n            <input\n              id=\"sign-in__password\"\n              label=\"Password\"\n              type=\"password\"\n              defaultValue={password}\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <button type=\"submit\">SignIn</button>\n          </form>\n          <hr />\n          <a onClick={() => setAuthView('sign_up')}>Don't have an account? Sign up</a>\n          <a onClick={() => setAuthView('forgotten_password')}>Forgot my password</a>\n          <hr />\n          <a onClick={() => setAuthView('magic_link')}>Send magic link email</a>\n        </>\n      ) : authView === 'sign_up' ? (\n        <>\n          <h4>Sign up</h4>\n          <form onSubmit={(e) => handleSignUp(e)}>\n            <label for=\"sign-up__email\">Email</label>\n            <input\n              id=\"sign-up__email\"\n              label=\"Email address\"\n              autoComplete=\"email\"\n              placeholder=\"Type in your email address\"\n              defaultValue={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <label for=\"sign-up__password\">Password</label>\n            <input\n              id=\"sign-up__password\"\n              label=\"Password\"\n              type=\"password\"\n              defaultValue={password}\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <button type=\"submit\">SignUp</button>\n          </form>\n          <hr />\n          <a onClick={() => setAuthView('sign_in')}>Already have an account, Sign in</a>\n          <a onClick={() => setAuthView('forgotten_password')}>Forgot my password</a>\n          <hr />\n          <a onClick={() => setAuthView('magic_link')}>Send magic link email</a>\n        </>\n      ) : authView === 'forgotten_password' ? (\n        <>\n          <h4>Forgotten password</h4>\n          <form onSubmit={handlePasswordReset}>\n            <label for=\"forgotten_password__email\">Email</label>\n            <input\n              id=\"forgotten_password__email\"\n              label=\"Email address\"\n              autoComplete=\"email\"\n              placeholder=\"Type in your email address\"\n              defaultValue={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <button type=\"submit\">Send reset password instructions</button>\n          </form>\n          <hr />\n          <a onClick={() => setAuthView('sign_up')}>Don't have an account? Sign up</a>\n          <a onClick={() => setAuthView('sign_in')}>Already have an account, Sign in</a>\n          <hr />\n          <a onClick={() => setAuthView('magic_link')}>Send magic link email</a>\n        </>\n      ) : authView === 'magic_link' ? (\n        <>\n          <h4>Magic link</h4>\n          <form onSubmit={handleMagicLinkSignIn}>\n            <input\n              label=\"Email address\"\n              autoComplete=\"email\"\n              placeholder=\"Type in your email address\"\n              defaultValue={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <button type=\"submit\">Send magic link</button>\n          </form>\n          <hr />\n          <a onClick={() => setAuthView('sign_up')}>Don't have an account? Sign up</a>\n          <a onClick={() => setAuthView('sign_in')}>Already have an account, Sign in</a>\n        </>\n      ) : null}\n    </>\n  )\n}\n\nfunction UpdatePassword({ supabaseClient }) {\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const [message, setMessage] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const handlePasswordReset = async (e) => {\n    e.preventDefault()\n    setError('')\n    setMessage('')\n    setLoading(true)\n    const { error } = await supabaseClient.auth.update({ password })\n    if (error) setError(error.message)\n    else setMessage('Your password has been updated')\n    setLoading(false)\n  }\n\n  return (\n    <>\n      {loading && <h3>Loading..</h3>}\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      {message && <div style={{ color: 'green' }}>{message}</div>}\n      <h4>Set a new password</h4>\n      <form onSubmit={handlePasswordReset}>\n        <input\n          label=\"New password\"\n          placeholder=\"Enter your new password\"\n          type=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button block size=\"large\" htmlType=\"submit\">\n          Update password\n        </button>\n      </form>\n    </>\n  )\n}\n\nAuth.UpdatePassword = UpdatePassword\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}