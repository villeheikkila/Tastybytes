{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/villeheikkila/Developer/nextjs-auth/lib/UserContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext, useContext } from \"react\";\nvar UserContext = /*#__PURE__*/createContext({\n  user: null,\n  session: null\n});\nexport var UserContextProvider = function UserContextProvider(_ref) {\n  _s();\n\n  var supabaseClient = _ref.supabaseClient,\n      children = _ref.children;\n\n  var _useState = useState(null),\n      session = _useState[0],\n      setSession = _useState[1];\n\n  var _useState2 = useState(null),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    var _session$user;\n\n    var session = supabaseClient.auth.session();\n    setSession(session);\n    setUser((_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null);\n\n    var _supabaseClient$auth$ = supabaseClient.auth.onAuthStateChange( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, session) {\n        var _session$user2;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSession(session);\n                setUser((_session$user2 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user2 !== void 0 ? _session$user2 : null);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()),\n        authListener = _supabaseClient$auth$.data;\n\n    return function () {\n      authListener === null || authListener === void 0 ? void 0 : authListener.unsubscribe();\n    };\n  }, []);\n  var value = {\n    session: session,\n    user: user\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(UserContextProvider, \"4IjASQdIVRDVJ0Ij/qSr3ceD3bo=\");\n\n_c = UserContextProvider;\nexport var useUser = function useUser() {\n  _s2();\n\n  var context = useContext(UserContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUser must be used within a UserContextProvider.\");\n  }\n\n  return context;\n};\n\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/Users/villeheikkila/Developer/nextjs-auth/lib/UserContext.tsx"],"names":["React","useEffect","useState","createContext","useContext","UserContext","user","session","UserContextProvider","supabaseClient","children","setSession","setUser","auth","onAuthStateChange","event","authListener","data","unsubscribe","value","useUser","context","undefined","Error"],"mappings":";;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,aAArC,EAAoDC,UAApD,QAAsE,OAAtE;AAEA,IAAMC,WAAW,gBAAGF,aAAa,CAG9B;AAAEG,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,OAAO,EAAE;AAAvB,CAH8B,CAAjC;AAUA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAGW;AAAA;;AAAA,MAF5CC,cAE4C,QAF5CA,cAE4C;AAAA,MAD5CC,QAC4C,QAD5CA,QAC4C;;AAAA,kBACdR,QAAQ,CAAiB,IAAjB,CADM;AAAA,MACrCK,OADqC;AAAA,MAC5BI,UAD4B;;AAAA,mBAEpBT,QAAQ,CAAc,IAAd,CAFY;AAAA,MAErCI,IAFqC;AAAA,MAE/BM,OAF+B;;AAI5CX,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAMM,OAAO,GAAGE,cAAc,CAACI,IAAf,CAAoBN,OAApB,EAAhB;AACAI,IAAAA,UAAU,CAACJ,OAAD,CAAV;AACAK,IAAAA,OAAO,kBAACL,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAED,IAAV,yDAAkB,IAAlB,CAAP;;AAHc,gCAIiBG,cAAc,CAACI,IAAf,CAAoBC,iBAApB;AAAA,2EAC7B,iBAAOC,KAAP,EAAcR,OAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEI,gBAAAA,UAAU,CAACJ,OAAD,CAAV;AACAK,gBAAAA,OAAO,mBAACL,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAED,IAAV,2DAAkB,IAAlB,CAAP;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAD6B;;AAAA;AAAA;AAAA;AAAA,QAJjB;AAAA,QAIAU,YAJA,yBAINC,IAJM;;AAWd,WAAO,YAAM;AACXD,MAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEE,WAAd;AACD,KAFD;AAGD,GAdQ,EAcN,EAdM,CAAT;AAgBA,MAAMC,KAAK,GAAG;AACZZ,IAAAA,OAAO,EAAPA,OADY;AAEZD,IAAAA,IAAI,EAAJA;AAFY,GAAd;AAKA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEa,KAA7B;AAAA,cAAqCT;AAArC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CA7BM;;GAAMF,mB;;KAAAA,mB;AA+Bb,OAAO,IAAMY,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAC3B,MAAMC,OAAO,GAAGjB,UAAU,CAACC,WAAD,CAA1B;;AACA,MAAIgB,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,sDAAN;AACD;;AACD,SAAOF,OAAP;AACD,CANM;;IAAMD,O","sourcesContent":["import { Session, SupabaseClient, User } from \"@supabase/supabase-js\";\nimport React, { useEffect, useState, createContext, useContext } from \"react\";\n\nconst UserContext = createContext<{\n  user: null | User;\n  session: null | Session;\n}>({ user: null, session: null });\n\ntype WithChildren<T = {}> = T & { children?: React.ReactNode };\n\ninterface UserContextProviderProps {\n  supabaseClient: SupabaseClient;\n}\nexport const UserContextProvider = ({\n  supabaseClient,\n  children,\n}: WithChildren<UserContextProviderProps>) => {\n  const [session, setSession] = useState<Session | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const session = supabaseClient.auth.session();\n    setSession(session);\n    setUser(session?.user ?? null);\n    const { data: authListener } = supabaseClient.auth.onAuthStateChange(\n      async (event, session) => {\n        setSession(session);\n        setUser(session?.user ?? null);\n      }\n    );\n\n    return () => {\n      authListener?.unsubscribe();\n    };\n  }, []);\n\n  const value = {\n    session,\n    user,\n  };\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error(`useUser must be used within a UserContextProvider.`);\n  }\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}